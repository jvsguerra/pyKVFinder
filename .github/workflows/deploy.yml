name: Build and deploy

on:
  push:
    branches:
      - master
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Build sdist
        run: |
          pipx run build --sdist

      - name: Test sdist
        run: |
          pip install pytest 
          pip install dist/*.tar.gz
          pytest tests/integration -v

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: ./dist

      - name: Upload artifacts to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install -U twine
          twine upload dist/*

  windows:
    runs-on: windows-latest
    if: true

    strategy:
      fail-fast: false
      matrix:
        # Might want to add win32, untested at the moment.
        arch: [win_amd64]
        pyver: [cp38, cp39, cp310, cp311]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_BUILD: ${{matrix.pyver}}-${{matrix.arch}}
          CIBW_ARCHS_WINDOWS: AMD64 x86
          CIBW_BEFORE_BUILD: pip install -U pip setuptools wheel

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
